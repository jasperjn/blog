{"version":3,"sources":["webpack:///path---2018-06-06-using-circle-ci-deploy-to-gh-pages-a66cc4004b2f9c6b736e.js","webpack:///./.cache/json/2018-06-06-using-circle-ci-deploy-to-gh-pages.json"],"names":["webpackJsonp","453","module","exports","data","site","siteMetadata","title","author","disqus","markdownRemark","id","html","frontmatter","date","tags","pathContext","slug","previous","fields","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,kBAAAC,OAAA,WAAAC,OAAA,aAAmEC,gBAAmBC,GAAA,+HAAAC,KAAA,moKAAkhHC,aAAu2DN,MAAA,kCAAAO,KAAA,gBAAAC,MAAA,kCAA0GC,aAAgBC,KAAA,kDAAAC,UAAqEC,QAAUF,KAAA,sCAA4CJ,aAAgBN,MAAA,yCAAAQ,MAAA,iEAAyHK,MAASD,QAAUF,KAAA,2CAAiDJ,aAAgBN,MAAA,+BAAAQ,MAAA","file":"path---2018-06-06-using-circle-ci-deploy-to-gh-pages-a66cc4004b2f9c6b736e.js","sourcesContent":["webpackJsonp([81259001278495],{\n\n/***/ 453:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"jasperjn's blog\",\"author\":\"jasperjn\",\"disqus\":\"jasperjn\"}},\"markdownRemark\":{\"id\":\"/home/circleci/repo/content/_posts/2018-06-06-using-circle-ci-deploy-to-gh-pages/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>什麼是 Circle CI？簡單的說就是可以監測程式碼異動後自動跑指令的工具。傳統上在本機開發時，程式碼建置、部署通常都是自己按 IDE 或打指令。當環境不只一個，每天要處理建置、部署是非常繁瑣的事。這時候可以出動 Circle CI 來當我們的左右手，減少重複性的動作以節省時間。</p>\\n<h2>與 Github 串接</h2>\\n<p>Circle CI 提供了超級簡單的步驟，只要滑鼠點一點一行指令碼都不用寫就可以完成與 Github 串接的設定。</p>\\n<p>打開 Circle CI 官網，點擊「Start Building For Free」。</p>\\n<p><img src=\\\"https://i.imgur.com/y40K8aT.png\\\" alt=\\\"Circle CI Homepage\\\"></p>\\n<p>選擇使用 Github 帳號登入</p>\\n<p><img src=\\\"https://i.imgur.com/5uduHrt.png\\\" alt=\\\"Sign Up With GitHub\\\"></p>\\n<p>允許讀取權限</p>\\n<p><img src=\\\"https://i.imgur.com/w9bc7El.png\\\"></p>\\n<p>點擊 Add Projects</p>\\n<p><img src=\\\"https://i.imgur.com/IyTWF7C.png\\\"></p>\\n<p>點擊「Setup Project」選擇要自動部署的專案，這邊我選擇「blog」</p>\\n<p>Operating System 選擇 Linux\\nLanguage 選擇 Node</p>\\n<p><img src=\\\"https://i.imgur.com/G5NANoV.png\\\"></p>\\n<p>依照底下的 Next Steps 步驟到專案底下建立 <code class=\\\"language-text\\\">.cycleci/config.yml</code> 設定檔</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml=\\\"><code class=\\\"language-yaml=\\\"># Javascript Node CircleCI 2.0 configuration file\\n#\\n# Check https://circleci.com/docs/2.0/language-javascript/ for more details\\n#\\nversion: 2\\njobs:\\n  build:\\n    docker:\\n      # specify the version you desire here\\n      - image: circleci/node:7.10\\n\\n      # Specify service dependencies here if necessary\\n      # CircleCI maintains a library of pre-built images\\n      # documented at https://circleci.com/docs/2.0/circleci-images/\\n      # - image: circleci/mongo:3.4.4\\n\\n    working_directory: ~/repo\\n\\n    steps:\\n      - checkout\\n\\n      # Download and cache dependencies\\n      - restore_cache:\\n          keys:\\n          - v1-dependencies-{{ checksum &quot;package.json&quot; }}\\n          # fallback to using the latest cache if no exact match is found\\n          - v1-dependencies-\\n\\n      - run: yarn install\\n\\n      - save_cache:\\n          paths:\\n            - node_modules\\n          key: v1-dependencies-{{ checksum &quot;package.json&quot; }}\\n\\n      # run tests!\\n      - run: yarn test</code></pre>\\n      </div>\\n<p>由於我沒有寫測試程式，不跑 37 行的 <code class=\\\"language-text\\\">yarn test</code> 改用 <code class=\\\"language-text\\\">yarn run build</code>，如果建置沒出錯就使用 <code class=\\\"language-text\\\">yarn run deploy</code> 部署。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml=\\\"><code class=\\\"language-yaml=\\\">      # run tests!\\n      # - run: yarn test\\n      - run: yarn run build\\n      - deploy:\\n          command: |\\n            git config --global user.email $GH_EMAIL\\n            git config --global user.name $GH_NAME\\n            yarn run deploy</code></pre>\\n      </div>\\n<p>開啟 <code class=\\\"language-text\\\">package.json</code> 寫好 deploy script，安裝 <code class=\\\"language-text\\\">gh-pages</code> 將建置後 public 底下的檔案 commit 到 <code class=\\\"language-text\\\">gh-pages</code> 分支</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i gh-pages -D</code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">package.json</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json=\\\"><code class=\\\"language-json=\\\">{\\n  ...\\n  &quot;scripts&quot;: {\\n    &quot;start&quot;: &quot;gatsby develop&quot;,\\n    &quot;build&quot;: &quot;gatsby build&quot;,\\n    &quot;deploy&quot;:\\n      &quot;gatsby build --prefix-paths &amp;&amp; gh-pages -d public -m \\\\&quot;Automated deployment to GitHub Pages: ${CIRCLE_SHA1}\\\\&quot;&quot;\\n  }\\n}</code></pre>\\n      </div>\\n<h2>設定 User Key</h2>\\n<p>設定好 <code class=\\\"language-text\\\">config.yml</code> <code class=\\\"language-text\\\">package.json</code> commit 後先別急著 push，否則 Circle CI 建置時可能會出現以下的錯誤。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">ERROR: The key you are authenticating with has been marked as read only.\\nfatal: Could not read from remote repository.</code></pre>\\n      </div>\\n<p>原因是先前用滑鼠按一按授權給 Circle CI 讀取的 Key 是唯讀的。只能讀取我們的 Repository 但不能 push。如果要在 Circle CI 上處理用我們的身份 commit、push 需要設定 User Key。</p>\\n<p>到 Settings > Projects > 找到專案點右邊的齒輪</p>\\n<p><img src=\\\"https://i.imgur.com/SqKLOnS.png\\\"></p>\\n<p>到 Permissions 底下的 Checkout SSH Keys 裡面有 Add User Key 框框，點擊「Authorize With GitHub」</p>\\n<p><img src=\\\"https://i.imgur.com/DTKinx1.png\\\"></p>\\n<p>允許權限</p>\\n<p><img src=\\\"https://i.imgur.com/DKJ1FKi.png\\\"></p>\\n<p>點擊「Create and add <username> user key」</p>\\n<p><img src=\\\"https://i.imgur.com/kdmpgZh.png\\\"></p>\\n<p>系統會自動產生新的 User Key</p>\\n<p><img src=\\\"https://i.imgur.com/s1OwCtP.png\\\"></p>\\n<blockquote>\\n<p>記得要保護好自己的 Key 不要公開分享給其他人，圖片範例裡面的 Key 已經被我置換掉了。</p>\\n</blockquote>\\n<p>回到剛剛 Project Settings 頁面，選擇 BUILD SETTINGS 底下的 Environment Variables。加上 commit 使用的 <code class=\\\"language-text\\\">GH_EMAIL</code> <code class=\\\"language-text\\\">GH_NAME</code></p>\\n<p><img src=\\\"https://i.imgur.com/oZD2Gdi.png\\\"></p>\\n<p>以上設定完成後 push 專案，Circle CI 會自動偵測異動並依照 <code class=\\\"language-text\\\">config.yml</code> 設定檔建置、部署到 <code class=\\\"language-text\\\">gh-pages</code> 分支。</p>\\n<p>參考資料</p>\\n<ul>\\n<li><a href=\\\"https://circleci.com/\\\">Circle CI</a></li>\\n<li><a href=\\\"https://circleci.com/docs/2.0/gh-bb-integration/\\\">GitHub and Bitbucket Integration</a></li>\\n<li><a href=\\\"https://blog.frederikring.com/articles/deploying-github-pages-circle-ci/\\\">Deploying to GitHub Pages using Circle CI 2.0</a></li>\\n</ul>\",\"frontmatter\":{\"title\":\"使用 Circle CI 自動部署到 Github Pages\",\"date\":\"June 06, 2018\",\"tags\":[\"circle ci\",\"gatsby\",\"github\"]}}},\"pathContext\":{\"slug\":\"/2018/06/06/using-circle-ci-deploy-to-gh-pages/\",\"previous\":{\"fields\":{\"slug\":\"/2017/10/27/google-cloud-platform/\"},\"frontmatter\":{\"title\":\"使用 Google Cloud Platform 建立 Node.js 網站\",\"tags\":[\"google cloud platform\",\"google cloud sdk\",\"app engine\",\"gcp\"]}},\"next\":{\"fields\":{\"slug\":\"/2018/07/14/typescript-v4-unknown-type/\"},\"frontmatter\":{\"title\":\"TypeScript 3.0 全新 unknown 型別\",\"tags\":[\"typescript\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2018-06-06-using-circle-ci-deploy-to-gh-pages-a66cc4004b2f9c6b736e.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"jasperjn's blog\",\"author\":\"jasperjn\",\"disqus\":\"jasperjn\"}},\"markdownRemark\":{\"id\":\"/home/circleci/repo/content/_posts/2018-06-06-using-circle-ci-deploy-to-gh-pages/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>什麼是 Circle CI？簡單的說就是可以監測程式碼異動後自動跑指令的工具。傳統上在本機開發時，程式碼建置、部署通常都是自己按 IDE 或打指令。當環境不只一個，每天要處理建置、部署是非常繁瑣的事。這時候可以出動 Circle CI 來當我們的左右手，減少重複性的動作以節省時間。</p>\\n<h2>與 Github 串接</h2>\\n<p>Circle CI 提供了超級簡單的步驟，只要滑鼠點一點一行指令碼都不用寫就可以完成與 Github 串接的設定。</p>\\n<p>打開 Circle CI 官網，點擊「Start Building For Free」。</p>\\n<p><img src=\\\"https://i.imgur.com/y40K8aT.png\\\" alt=\\\"Circle CI Homepage\\\"></p>\\n<p>選擇使用 Github 帳號登入</p>\\n<p><img src=\\\"https://i.imgur.com/5uduHrt.png\\\" alt=\\\"Sign Up With GitHub\\\"></p>\\n<p>允許讀取權限</p>\\n<p><img src=\\\"https://i.imgur.com/w9bc7El.png\\\"></p>\\n<p>點擊 Add Projects</p>\\n<p><img src=\\\"https://i.imgur.com/IyTWF7C.png\\\"></p>\\n<p>點擊「Setup Project」選擇要自動部署的專案，這邊我選擇「blog」</p>\\n<p>Operating System 選擇 Linux\\nLanguage 選擇 Node</p>\\n<p><img src=\\\"https://i.imgur.com/G5NANoV.png\\\"></p>\\n<p>依照底下的 Next Steps 步驟到專案底下建立 <code class=\\\"language-text\\\">.cycleci/config.yml</code> 設定檔</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml=\\\"><code class=\\\"language-yaml=\\\"># Javascript Node CircleCI 2.0 configuration file\\n#\\n# Check https://circleci.com/docs/2.0/language-javascript/ for more details\\n#\\nversion: 2\\njobs:\\n  build:\\n    docker:\\n      # specify the version you desire here\\n      - image: circleci/node:7.10\\n\\n      # Specify service dependencies here if necessary\\n      # CircleCI maintains a library of pre-built images\\n      # documented at https://circleci.com/docs/2.0/circleci-images/\\n      # - image: circleci/mongo:3.4.4\\n\\n    working_directory: ~/repo\\n\\n    steps:\\n      - checkout\\n\\n      # Download and cache dependencies\\n      - restore_cache:\\n          keys:\\n          - v1-dependencies-{{ checksum &quot;package.json&quot; }}\\n          # fallback to using the latest cache if no exact match is found\\n          - v1-dependencies-\\n\\n      - run: yarn install\\n\\n      - save_cache:\\n          paths:\\n            - node_modules\\n          key: v1-dependencies-{{ checksum &quot;package.json&quot; }}\\n\\n      # run tests!\\n      - run: yarn test</code></pre>\\n      </div>\\n<p>由於我沒有寫測試程式，不跑 37 行的 <code class=\\\"language-text\\\">yarn test</code> 改用 <code class=\\\"language-text\\\">yarn run build</code>，如果建置沒出錯就使用 <code class=\\\"language-text\\\">yarn run deploy</code> 部署。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml=\\\"><code class=\\\"language-yaml=\\\">      # run tests!\\n      # - run: yarn test\\n      - run: yarn run build\\n      - deploy:\\n          command: |\\n            git config --global user.email $GH_EMAIL\\n            git config --global user.name $GH_NAME\\n            yarn run deploy</code></pre>\\n      </div>\\n<p>開啟 <code class=\\\"language-text\\\">package.json</code> 寫好 deploy script，安裝 <code class=\\\"language-text\\\">gh-pages</code> 將建置後 public 底下的檔案 commit 到 <code class=\\\"language-text\\\">gh-pages</code> 分支</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i gh-pages -D</code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">package.json</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json=\\\"><code class=\\\"language-json=\\\">{\\n  ...\\n  &quot;scripts&quot;: {\\n    &quot;start&quot;: &quot;gatsby develop&quot;,\\n    &quot;build&quot;: &quot;gatsby build&quot;,\\n    &quot;deploy&quot;:\\n      &quot;gatsby build --prefix-paths &amp;&amp; gh-pages -d public -m \\\\&quot;Automated deployment to GitHub Pages: ${CIRCLE_SHA1}\\\\&quot;&quot;\\n  }\\n}</code></pre>\\n      </div>\\n<h2>設定 User Key</h2>\\n<p>設定好 <code class=\\\"language-text\\\">config.yml</code> <code class=\\\"language-text\\\">package.json</code> commit 後先別急著 push，否則 Circle CI 建置時可能會出現以下的錯誤。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">ERROR: The key you are authenticating with has been marked as read only.\\nfatal: Could not read from remote repository.</code></pre>\\n      </div>\\n<p>原因是先前用滑鼠按一按授權給 Circle CI 讀取的 Key 是唯讀的。只能讀取我們的 Repository 但不能 push。如果要在 Circle CI 上處理用我們的身份 commit、push 需要設定 User Key。</p>\\n<p>到 Settings > Projects > 找到專案點右邊的齒輪</p>\\n<p><img src=\\\"https://i.imgur.com/SqKLOnS.png\\\"></p>\\n<p>到 Permissions 底下的 Checkout SSH Keys 裡面有 Add User Key 框框，點擊「Authorize With GitHub」</p>\\n<p><img src=\\\"https://i.imgur.com/DTKinx1.png\\\"></p>\\n<p>允許權限</p>\\n<p><img src=\\\"https://i.imgur.com/DKJ1FKi.png\\\"></p>\\n<p>點擊「Create and add <username> user key」</p>\\n<p><img src=\\\"https://i.imgur.com/kdmpgZh.png\\\"></p>\\n<p>系統會自動產生新的 User Key</p>\\n<p><img src=\\\"https://i.imgur.com/s1OwCtP.png\\\"></p>\\n<blockquote>\\n<p>記得要保護好自己的 Key 不要公開分享給其他人，圖片範例裡面的 Key 已經被我置換掉了。</p>\\n</blockquote>\\n<p>回到剛剛 Project Settings 頁面，選擇 BUILD SETTINGS 底下的 Environment Variables。加上 commit 使用的 <code class=\\\"language-text\\\">GH_EMAIL</code> <code class=\\\"language-text\\\">GH_NAME</code></p>\\n<p><img src=\\\"https://i.imgur.com/oZD2Gdi.png\\\"></p>\\n<p>以上設定完成後 push 專案，Circle CI 會自動偵測異動並依照 <code class=\\\"language-text\\\">config.yml</code> 設定檔建置、部署到 <code class=\\\"language-text\\\">gh-pages</code> 分支。</p>\\n<p>參考資料</p>\\n<ul>\\n<li><a href=\\\"https://circleci.com/\\\">Circle CI</a></li>\\n<li><a href=\\\"https://circleci.com/docs/2.0/gh-bb-integration/\\\">GitHub and Bitbucket Integration</a></li>\\n<li><a href=\\\"https://blog.frederikring.com/articles/deploying-github-pages-circle-ci/\\\">Deploying to GitHub Pages using Circle CI 2.0</a></li>\\n</ul>\",\"frontmatter\":{\"title\":\"使用 Circle CI 自動部署到 Github Pages\",\"date\":\"June 06, 2018\",\"tags\":[\"circle ci\",\"gatsby\",\"github\"]}}},\"pathContext\":{\"slug\":\"/2018/06/06/using-circle-ci-deploy-to-gh-pages/\",\"previous\":{\"fields\":{\"slug\":\"/2017/10/27/google-cloud-platform/\"},\"frontmatter\":{\"title\":\"使用 Google Cloud Platform 建立 Node.js 網站\",\"tags\":[\"google cloud platform\",\"google cloud sdk\",\"app engine\",\"gcp\"]}},\"next\":{\"fields\":{\"slug\":\"/2018/07/14/typescript-v4-unknown-type/\"},\"frontmatter\":{\"title\":\"TypeScript 3.0 全新 unknown 型別\",\"tags\":[\"typescript\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2018-06-06-using-circle-ci-deploy-to-gh-pages.json\n// module id = 453\n// module chunks = 81259001278495"],"sourceRoot":""}