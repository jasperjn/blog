{"version":3,"sources":["webpack:///component---src-templates-tags-tsx-5edad7d7221244b9e1af.js","webpack:///./src/templates/tags.tsx"],"names":["webpackJsonp","292","module","exports","__webpack_require__","__importDefault","mod","__esModule","default","Object","defineProperty","value","gatsby_link_1","react_1","Tags","_ref","pathContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","createElement","map","_ref2","node","title","frontmatter","path","fields","slug","key","to","pageQuery"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAEA,IAAIC,GAA4D,SAAUC,GACxE,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAAWF,GAEpDG,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCTvD,IAAAC,GAAAP,EAAAD,EAAA,KACAS,EAAAR,EAAAD,EAAA,IAmBMU,EAA6B,SAAAC,GAA0B,GAAvBC,GAAuBD,EAAvBC,YAAaC,EAAUF,EAAVE,KACzCC,EAAQF,EAARE,IADmDC,EAE7BF,EAAKG,kBAA3BC,EAFmDF,EAEnDE,MAAOC,EAF4CH,EAE5CG,WACTC,EAAeD,EAAf,SACW,IAAfA,EAAmB,GAAK,KADpB,iBAEWJ,EAFX,GAIN,OACEL,GAAAL,QAAAgB,cAAA,WACEX,EAAAL,QAAAgB,cAAA,UAAKD,GACLV,EAAAL,QAAAgB,cAAA,UACGH,EAAMI,IAAI,SAAAC,GAAa,GAAVC,GAAUD,EAAVC,KACJC,EAAUD,EAAKE,YAAfD,MACME,EAASH,EAAKI,OAApBC,IACR,OACEnB,GAAAL,QAAAgB,cAAA,MAAIS,IAAKH,GACPjB,EAAAL,QAAAgB,cAACZ,EAAAJ,SAAK0B,GAAIJ,GAAOF,OASzBf,EAAAL,QAAAgB,cAACZ,EAAAJ,SAAK0B,GAAG,SAAO,aAKtB/B,GAAAK,QAAeM,EAEFX,EAAAgC,UAAA","file":"component---src-templates-tags-tsx-5edad7d7221244b9e1af.js","sourcesContent":["webpackJsonp([268655982550610],{\n\n/***/ 292:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n\t  return mod && mod.__esModule ? mod : { \"default\": mod };\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// Components\n\tvar gatsby_link_1 = __importDefault(__webpack_require__(62));\n\tvar react_1 = __importDefault(__webpack_require__(1));\n\tvar Tags = function Tags(_ref) {\n\t  var pathContext = _ref.pathContext,\n\t      data = _ref.data;\n\t  var tag = pathContext.tag;\n\t  var _data$allMarkdownRema = data.allMarkdownRemark,\n\t      edges = _data$allMarkdownRema.edges,\n\t      totalCount = _data$allMarkdownRema.totalCount;\n\t\n\t  var tagHeader = totalCount + \" post\" + (totalCount === 1 ? '' : 's') + \" tagged with \\\"\" + tag + \"\\\"\";\n\t  return react_1.default.createElement(\"div\", null, react_1.default.createElement(\"h1\", null, tagHeader), react_1.default.createElement(\"ul\", null, edges.map(function (_ref2) {\n\t    var node = _ref2.node;\n\t    var title = node.frontmatter.title;\n\t    var path = node.fields.slug;\n\t\n\t    return react_1.default.createElement(\"li\", { key: path }, react_1.default.createElement(gatsby_link_1.default, { to: path }, title));\n\t  })), react_1.default.createElement(gatsby_link_1.default, { to: \"/tags\" }, \"All tags\"));\n\t};\n\texports.default = Tags;\n\texports.pageQuery = \"** extracted graphql fragment **\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-tags-tsx-5edad7d7221244b9e1af.js","// Components\nimport Link from 'gatsby-link'\nimport React from 'react'\n\ninterface Frontmatter {\n  path: string\n  title: string\n}\n\ninterface TagsProps {\n  pathContext: {\n    tag: string\n  }\n  data: {\n    allMarkdownRemark: {\n      totalCount: number\n      edges: { node: MarkdownRemark }[]\n    }\n  }\n}\n\nconst Tags: React.SFC<TagsProps> = ({ pathContext, data }) => {\n  const { tag } = pathContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n\n  return (\n    <div>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { title } = node.frontmatter\n          const { slug: path } = node.fields\n          return (\n            <li key={path}>\n              <Link to={path}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      {/*\n              This links to a page that does not yet exist.\n              We'll come back to it!\n            */}\n      <Link to=\"/tags\">All tags</Link>\n    </div>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/tags.tsx"],"sourceRoot":""}